apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8tls-serviceact
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8tls-cr
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8tls-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8tls-cr
subjects:
- kind: ServiceAccount
  name: k8tls-serviceact
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: k8tls-job
  namespace: {{ .Release.Namespace }}
spec:
  jobTemplate:
    metadata:
      name: k8tls-job
    spec:
      template:
        spec:
          serviceAccountName: k8tls-serviceact
          containers:
          - image: accuknox/accuknox-job:latest
            command: ["/bin/sh", "-c"]
            args: ['./curl_command.sh']
            name: k8tls-job
            resources: {}
            env:
              - name: URL
                value: {{ .Values.accuknox.URL }}
              - name: TENANT_ID
                value: {{ .Values.accuknox.tenantID | quote }}
              - name: AUTH_TOKEN
                value: {{ .Values.accuknox.authToken }}
              - name: CLUSTER_NAME
                value: {{ if ne .Values.accuknox.clusterName "" }}{{ .Values.accuknox.clusterName }}{{ else }}{{ "default" }}{{ end }}
              - name: LABEL_NAME
                value: {{ if ne .Values.accuknox.label "" }}{{ .Values.accuknox.label }}{{ else }}{{ "default" }}{{ end }}
              - name: CERT_BUNDLE_URL
                value: {{ .Values.accuknox.certBundleURL }}
              - name: USE_INSECURE_CONNECTION
                value: {{ .Values.accuknox.useInsecureConnection | quote }}
              - name: DATA_TYPE
                value: "K8TLS"
            volumeMounts:
              - mountPath: /data
                name: datapath
          initContainers:
          - command: ["/bin/sh", "-c"]
            args: ["./k8s_tlsscan"]
            image: kubearmor/k8tls:latest
            name: k8tls
            env:
              - name: JSON
                value: "/data/report.json"
            volumeMounts:
            - mountPath: /data
              name: datapath
          restartPolicy: Never
          volumes:
            - name: datapath
              emptyDir: {}

  schedule: "{{ .Values.accuknox.cronTab }}"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
