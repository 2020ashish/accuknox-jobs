apiVersion: batch/v1
kind: CronJob
metadata:
  name: accuknox-cis-cronjob
  namespace: {{ .Release.Namespace }}
spec:
  jobTemplate:
    metadata:
      name: accuknox-cis-cronjob
    spec:
      template:
        spec:
          containers:
          - image: accuknox/accuknox-job:latest
            command: ["/bin/sh", "-c"]
            args: ["curl --location --request POST 'https://$CSPM_URL/api/v1/artifact/?tenant_id=$TENANT_ID&data_type=KB&save_to_s3=true'" --header "Authorization: Bearer $AUTH_TOKEN" --form 'file=@"./data/report.json"']
            name: accuknox-cis-cronjob
            resources: {}
            env:
              - name: AUTH_TOKEN
                value: {{ .Values.accuknox.authToken }}
              - name: CLUSTER_NAME
                value: {{ .Values.accuknox.clusterName }}
              - name: LABEL_NAME
                value: {{ .Values.accuknox.label }}
              - name: CLUSTER_ID
                value: {{ .Values.accuknox.clusterId }}
              - name: TENANT_ID
                value: {{ .Values.accuknox.tenantId }}
              - name: ENV_PATH
                value: {{ .Values.accuknox.envPath }}
              - name: CSPM_URL
                value: {{ .Values.accuknox.cspmURL }}
            volumeMounts:
              - mountPath: /data
                name: datapath
          initContainers:
          - command: ["/bin/sh", "-c"]
            args: ["kube-bench run --json > /data/report.json"]
            image: docker.io/aquasec/kube-bench:v0.6.19
            name: kube-bench
            volumeMounts:
            - mountPath: /data
              name: datapath
            - mountPath: /var/lib/etcd
              name: var-lib-etcd
              readOnly: true
            - mountPath: /var/lib/kubelet
              name: var-lib-kubelet
              readOnly: true
            - mountPath: /var/lib/kube-scheduler
              name: var-lib-kube-scheduler
              readOnly: true
            - mountPath: /var/lib/kube-controller-manager
              name: var-lib-kube-controller-manager
              readOnly: true
            - mountPath: /etc/systemd
              name: etc-systemd
              readOnly: true
            - mountPath: /lib/systemd/
              name: lib-systemd
              readOnly: true
            - mountPath: /srv/kubernetes/
              name: srv-kubernetes
              readOnly: true
            - mountPath: /etc/kubernetes
              name: etc-kubernetes
              readOnly: true
            - mountPath: /usr/local/mount-from-host/bin
              name: usr-bin
              readOnly: true
            - mountPath: /etc/cni/net.d/
              name: etc-cni-netd
              readOnly: true
            - mountPath: /opt/cni/bin/
              name: opt-cni-bin
              readOnly: true
          hostPID: true
          restartPolicy: Never
          volumes:
            - name: datapath
              emptyDir: {}
            - hostPath:
                path: /var/lib/etcd
              name: var-lib-etcd
            - hostPath:
                path: /var/lib/kubelet
              name: var-lib-kubelet
            - hostPath:
                path: /var/lib/kube-scheduler
              name: var-lib-kube-scheduler
            - hostPath:
                path: /var/lib/kube-controller-manager
              name: var-lib-kube-controller-manager
            - hostPath:
                path: /etc/systemd
              name: etc-systemd
            - hostPath:
                path: /lib/systemd
              name: lib-systemd
            - hostPath:
                path: /srv/kubernetes
              name: srv-kubernetes
            - hostPath:
                path: /etc/kubernetes
              name: etc-kubernetes
            - hostPath:
                path: /usr/bin
              name: usr-bin
            - hostPath:
                path: /etc/cni/net.d/
              name: etc-cni-netd
            - hostPath:
                path: /opt/cni/bin/
              name: opt-cni-bin

  schedule: "{{ .Values.accuknox.cronTab }}"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1

status: {}
