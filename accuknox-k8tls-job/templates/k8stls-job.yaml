apiVersion: v1
kind: Namespace
metadata:
  name: k8tls
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8tls-serviceact
  namespace: k8tls
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8tls-cr
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8tls-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8tls-cr
subjects:
- kind: ServiceAccount
  name: k8tls-serviceact
  namespace: k8tls
---
apiVersion: batch/v1
kind: Job
metadata:
  name: accuknox-k8tls-job
  namespace: k8tls
spec:
      template:
        spec:
          serviceAccountName: k8tls-serviceact
          containers:
          - image: nginx
            command: ["/bin/sh", "-c"]
            args: ["apt update && apt install -y curl && curl www.google.com && echo $AUTH_TOKEN && cat /data/report.json"]
            name: accuknox-k8tls-job
            resources: {}
            env:
              - name: AUTH_TOKEN
                value: {{ .Values.accuknox.authToken }}
            volumeMounts:
              - mountPath: /data
                name: datapath
          initContainers:
          - command: ["/bin/sh", "-c"]
            args: ["./k8s_tlsscan"]
            image: kubearmor/k8tls:latest
            name: k8tls
            env:
              - name: JSON
                value: "/data/report.json"
            volumeMounts:
            - mountPath: /data
              name: datapath
          restartPolicy: Never
          volumes:
            - name: datapath
              emptyDir: {}
